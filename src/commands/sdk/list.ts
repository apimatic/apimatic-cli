import { cli } from "cli-ux";
import { log } from "../../utils/log";
import { Command, flags } from "@oclif/command";

import { CodeGeneration } from "../../types/sdk/list";
import { getSdkList } from "../../controllers/sdk/list";

export default class SdkList extends Command {
  static description = "List all the SDKs generated by you.";

  static flags = {
    external: flags.boolean({
      default: false,
      description: "List all the SDKs generated externally with file or url"
    }),
    "api-entity": flags.string({
      description: "API Entity Id to list SDK generations for"
    }),
    "auth-key": flags.string({ description: "Override current authentication state with an authentication key" })
  };

  async run() {
    const { flags } = this.parse(SdkList);

    const sdkList: CodeGeneration[] = await getSdkList(flags, this.config.configDir);

    sdkList.length
      ? cli.table(
          sdkList,
          {
            "codegen-id": {
              minWidth: 15,
              get: (row: CodeGeneration) => row.id
            },
            template: {
              minWidth: 10,
              get: (row: CodeGeneration) => row.template
            },
            "api-entity": {
              minWidth: 10,
              get: (row: CodeGeneration) => row["api-entity"]
            }
          },
          {
            printLine: this.log
          }
        )
      : log.info("No SDKs found");
  }
}
